[
  {
    "objectID": "docs/pages/reference.html",
    "href": "docs/pages/reference.html",
    "title": "passgen",
    "section": "",
    "text": "passgen is a command-line application, so, you use it by sending commands to the shell program of your operational system. The simplest use of passgen, is to just give the program name, like in the example below:\n\n\nterminal$ passgen\njdwCuIOLDm\n\n\nBy default, passgen will generate a password with 10 characters. The characters included in your password, will depend on the chosen character set. You can change the behaviour of passgen, by using one (or many) of the available options. In summary, passgen supports the following command-line options:\n\n-l or --length: define the length of your password (default to 10). This option expects a integer as argument;\n-p or --number-of-passwords: the number of passwords to be generated (default to 1). This option expects a integer as argument;\n-u or --no-upper-case-letters: exclude the Basic-Latin upper case letters from the character set;\n-o or --no-lower-case-letters: exclude the Basic-Latin lower case letters from the character set;\n-s or --special-chars: include special characters (e.g. $, %, #, @ etc.) in the character set;\n-n or --numbers: include numbers (e.g. 0, 1, 2, etc.) in the character set;\n-v or --version: prints the current version of the passgen program;\n-h or --help: prints the help documentation;"
  },
  {
    "objectID": "docs/pages/reference.html#including-numbers",
    "href": "docs/pages/reference.html#including-numbers",
    "title": "passgen",
    "section": "Including numbers",
    "text": "Including numbers\nYou can include numbers (i.e. “0-9”) in the character set, by including the -n option, like this:\n\n\nterminal$ passgen -n -l 25\nqlmpSEP4jFIq4XVm8GynmAr5w\n\n\nOr, the long version of the option:\n\n\nterminal$ passgen --numbers -l 25\nqlmpSEP4jFIq4XVm8GynmAr5w"
  },
  {
    "objectID": "docs/pages/reference.html#including-special-characters",
    "href": "docs/pages/reference.html#including-special-characters",
    "title": "passgen",
    "section": "Including special characters",
    "text": "Including special characters\nYou can include special characters (e.g. “!”, “@”, “#”, etc.) in the character set, by including the -s option, like this:\n\n\nterminal$ passgen -s -l 25\nIfow;'Hen}\\#y{b&Kk-hkuWnl\n\n\nOr, the long version of the option:\n\n\nterminal$ passgen --special-chars\nIfow;'Hen}"
  },
  {
    "objectID": "docs/pages/reference.html#excluding-lower-and-upper-case-basic-latin-letters",
    "href": "docs/pages/reference.html#excluding-lower-and-upper-case-basic-latin-letters",
    "title": "passgen",
    "section": "Excluding lower and upper case Basic-Latin letters",
    "text": "Excluding lower and upper case Basic-Latin letters\nYou can not only include specific set of characters, but, you can also exclude them. By default, passgen starts with a set of characters containing the lower and upper case Basic-Latin letters, however, you can exclude them with the -o and -u options.\n\n\nterminal$ passgen -o\nHXNDJMUBAD\n\nterminal$ passgen -u\nhxndjmubad\n\n\nBe careful to not remove all characters from the character set. In other words, if you remove the upper and lower case letters at the same time, and, not provide any set of characters to replace the void created, the program will issue an error warning about this mistake:\n\n\nterminal$ passgen -o -u\nWith the arguments you gave at the command line, all character set flags are set to false! As a result, the program does not have a character set to generate your password! \nterminate called without an active exception"
  },
  {
    "objectID": "docs/pages/reference.html#producing-numbers-only-passwords",
    "href": "docs/pages/reference.html#producing-numbers-only-passwords",
    "title": "passgen",
    "section": "Producing “numbers-only” passwords",
    "text": "Producing “numbers-only” passwords\nAs an example, you can produce a “numbers-only” password, by passing a character set composed only of numbers to passgen. You can do this, by excluding the lower and upper case Basic-Latin letters, and, including the numbers with options -o, -u and -n:\n\n\nterminal$ passgen -o -u -n\n9617524329"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "passgen",
    "section": "",
    "text": "Features\n\npassgen uses only C++ Standard Library. As a result, it is very easy to build;\nIt have a option to generate multiple passwords at once;\nCan produce “number-only”, or, “special-chars-only” passwords;"
  }
]